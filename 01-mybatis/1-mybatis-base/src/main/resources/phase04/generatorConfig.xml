<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
		PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
		"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<!--properties、classPathEntry、context一定要保持顺序-->
<generatorConfiguration>
	<!--指定外部属性元素-->
	<properties resource="phase04/db.properties"></properties>
	<!--指定特定数据库的jdbc驱动jar包的位置-->
	<classPathEntry location="${db.driverClassName}"/>
	<!--指定生成一组对象的环境-->
	<context id="default" targetRuntime="MyBatis3" defaultModelType="flat">
		<!--配置分隔符-->
		<property name="autoDelimitKeywords" value="true"/><!--给关键字添加分隔符属性-->
		<property name="beginningDelimiter" value="`"/><!--配置前置分隔符-->
		<property name="endingDelimiter" value="`"/><!--配置后置分隔符-->
		<!--<property name="javaFileEncoding" value="UTF-8"/>-->
		<!--<property name="javaFormatter" value=""/>-->
		<!--<property name="xmlFormatter" value=""/>-->

		<!--定义插件：缓存插件(可以为其他插件)-->
		<plugin type="org.mybatis.generator.plugins.CachePlugin">
			<property name="cache_eviction" value="LRU"/>
			<property name="cache_size" value="1024"/>
		</plugin>

		<!-- 如何生成注释信息 默认值均为false-->
		<commentGenerator>
			<property name="suppressDate" value="true"/><!--阻止生成的注释包含时间戳-->
			<property name="suppressAllComments" value="true"/><!--阻止生成注释-->
			<property name="addRemarkComments" value="true"/><!--是否添加数据库表的备注信息-->
		</commentGenerator>

		<!--jdbc的数据库连接 -->
		<jdbcConnection
				driverClass="${db.driver}"
				connectionURL="${db.url}"
				userId="${db.username}"
				password="${db.password}">
		</jdbcConnection>

		<!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
		<javaTypeResolver>
			<!--控制是否强制将DECIMAL和 NUMBER类型的JDBC字段转换为java类型的BigDecmal-->
			<property name="forceBigDecimals" value="false"/>
		</javaTypeResolver>


		<!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
            * 重点:使用方法调用generator生成代码，使用实际项目目录下的文件路径 (.\1-mybatis-base\src\main\java)
            	  使用maven插件生成代码，使用相对项目相对路径(./src/main/java)
        -->
		<javaModelGenerator targetPackage="com.jeffosmond.phase04.entity"
							targetProject=".\01-mybatis\1-mybatis-base\src\main\java">
			<!-- 是否允许子包，即targetPackage.schemaName.tableName -->
			<property name="enableSubPackages" value="false"/>
			<!-- 是否对model添加 构造函数 -->
			<property name="constructorBased" value="true"/>
			<!-- 是否对类CHAR类型的列的数据进行trim操作，如果是true就会生成this.name=name==null?null:name.trim()-->
			<property name="trimStrings" value="true"/>
			<!-- 建立的Model对象是否可变  即生成的Model对象不会有 setter方法，只有构造方法，false实体属性可以改变-->
			<property name="immutable" value="false"/>
			<!-- 设置所有实体类的基类-->
			<!--<property name="rootClass" value=""/>-->
		</javaModelGenerator>

		<!--mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap文件 -->
		<sqlMapGenerator targetPackage="com.jeffosmond.phase04.mapper"
						 targetProject=".\01-mybatis\1-mybatis-base\src\main\java">
			<!--是否根据catalog和schema生成子包-->
			<property name="enableSubPackages" value="false"/>
		</sqlMapGenerator>

		<!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件的代码，Mybatis3提供以下类型
                type="ANNOTATEDMAPPER",基于注解的Mapper接口哦，不会有对应的XML映射文件
                type="MIXEDMAPPER",XML和注解混合形式，上面这种情况中的SQL provider注解方法会被XML方式替代
                type="XMLMAPPER",所有方法都在XML中，接口调用依赖XML文件
        -->
		<!-- 可选属性：implementationPackage="" 如果指定该属性,Mapper接口的实现类就会生成在这个属性指定的包中-->
		<javaClientGenerator type="XMLMAPPER"
							 targetPackage="com.jeffosmond.phase04.mapper"
							 targetProject=".\01-mybatis\1-mybatis-base\src\main\java">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>

		<!--属性太多。。。-->
		<!--生成全部的表：tableName=”%“-->
<!--		<table tableName="user"-->
<!--			   domainObjectName="User"-->
<!--			   enableCountByExample="false"-->
<!--			   enableUpdateByExample="false"-->
<!--			   enableDeleteByExample="false"-->
<!--			   enableSelectByExample="false"-->
<!--			   selectByExampleQueryId="false"></table>-->
		<table tableName="user"></table>
	</context>
</generatorConfiguration>